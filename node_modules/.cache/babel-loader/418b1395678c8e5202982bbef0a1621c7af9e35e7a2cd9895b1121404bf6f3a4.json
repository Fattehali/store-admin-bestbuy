{"ast":null,"code":"export default {\n  name: 'OrderList',\n  props: ['orders'],\n  emits: ['fetchOrders', 'completeOrder'],\n  computed: {\n    hasOrders() {\n      return this.orders.length > 0;\n    }\n  },\n  methods: {\n    fetchOrders() {\n      this.$emit('fetchOrders');\n    },\n    orderTotal(order) {\n      let total = 0;\n      order.items.forEach(item => {\n        total += item.price * item.quantity;\n      });\n      return total.toFixed(2);\n    }\n  },\n  beforeMount() {\n    this.fetchOrders();\n  }\n};","map":{"version":3,"names":["name","props","emits","computed","hasOrders","orders","length","methods","fetchOrders","$emit","orderTotal","order","total","items","forEach","item","price","quantity","toFixed","beforeMount"],"sources":["/Users/fattehali/Desktop/BestBuy/store-admin-L8/src/components/OrderList.vue"],"sourcesContent":["<template>\n  <div class=\"order-list\" v-if=\"hasOrders\">\n    <table>\n      <thead>\n        <tr>\n          <th>Order ID</th>\n          <th>Customer ID</th>\n          <th>Status</th>\n          <th>Total</th>\n        </tr>\n      </thead>\n      <tr v-for=\"order in orders\" :key=\"order.orderId\">\n        <td><router-link :to=\"`/order/${order.orderId}`\">{{ order.orderId }}</router-link></td>\n        <td>{{ order.customerId }}</td>\n        <td>{{ order.status }}</td>\n        <td>{{ orderTotal(order) }}</td>\n      </tr>\n    </table>\n  </div>\n  <div class=\"order-list\" v-else>\n    <h3>No orders to process</h3>\n  </div> \n</template>\n\n<script>\n  export default {\n    name: 'OrderList',\n    props: ['orders'],\n    emits: ['fetchOrders', 'completeOrder'],\n    computed: {\n      hasOrders() {\n        return this.orders.length > 0\n      }\n    },\n    methods: {\n      fetchOrders() {\n        this.$emit('fetchOrders')\n      },\n      orderTotal(order) {\n        let total = 0;\n        order.items.forEach(item => {\n          total += item.price * item.quantity;\n        });\n        return total.toFixed(2);\n      }\n    },\n    beforeMount() {\n      this.fetchOrders()\n    }\n  }\n</script>\n\n<style scoped>\na {\n  color: #0000FF;\n  text-decoration: underline;\n}\n\n.order-list {\n  text-align: left;\n}\n</style>"],"mappings":"AAyBE,eAAe;EACbA,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,CAAC,QAAQ,CAAC;EACjBC,KAAK,EAAE,CAAC,aAAa,EAAE,eAAe,CAAC;EACvCC,QAAQ,EAAE;IACRC,SAASA,CAAA,EAAG;MACV,OAAO,IAAI,CAACC,MAAM,CAACC,MAAK,GAAI;IAC9B;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACC,KAAK,CAAC,aAAa;IAC1B,CAAC;IACDC,UAAUA,CAACC,KAAK,EAAE;MAChB,IAAIC,KAAI,GAAI,CAAC;MACbD,KAAK,CAACE,KAAK,CAACC,OAAO,CAACC,IAAG,IAAK;QAC1BH,KAAI,IAAKG,IAAI,CAACC,KAAI,GAAID,IAAI,CAACE,QAAQ;MACrC,CAAC,CAAC;MACF,OAAOL,KAAK,CAACM,OAAO,CAAC,CAAC,CAAC;IACzB;EACF,CAAC;EACDC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACX,WAAW,CAAC;EACnB;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}