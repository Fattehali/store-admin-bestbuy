{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TopNav = _resolveComponent(\"TopNav\");\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createVNode(_component_TopNav), _createVNode(_component_router_view, {\n    orders: $data.orders,\n    products: $data.products,\n    onFetchOrders: $options.fetchOrders,\n    onCompleteOrder: $options.completeOrder,\n    onAddProductsToList: $options.addProductsToList,\n    onUpdateProductInList: $options.updateProductInList,\n    onGetProduct: $options.getProduct,\n    onGetProducts: $options.getProducts\n  }, null, 8 /* PROPS */, [\"orders\", \"products\", \"onFetchOrders\", \"onCompleteOrder\", \"onAddProductsToList\", \"onUpdateProductInList\", \"onGetProduct\", \"onGetProducts\"])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createVNode","_component_TopNav","_component_router_view","orders","$data","products","onFetchOrders","$options","fetchOrders","onCompleteOrder","completeOrder","onAddProductsToList","addProductsToList","onUpdateProductInList","updateProductInList","onGetProduct","getProduct","onGetProducts","getProducts"],"sources":["/Users/fattehali/Desktop/BestBuy/store-admin-L8/src/App.vue"],"sourcesContent":["<template>\n  <TopNav />\n  <router-view\n    :orders=\"orders\"\n    :products=\"products\"\n    @fetchOrders=\"fetchOrders\"\n    @completeOrder=\"completeOrder\"\n    @addProductsToList=\"addProductsToList\"\n    @updateProductInList=\"updateProductInList\"\n    @getProduct=\"getProduct\"\n    @getProducts=\"getProducts\"\n  ></router-view>\n</template>\n\n<script>\nimport TopNav from './components/TopNav.vue';\n\nconst productServiceUrl = \"/products/\";\nconst singleProductServiceUrl = \"/product/\";\nconst makelineServiceUrl = \"/makeline/\";\n\nexport default {\n  name: 'App',\n  components: {\n    TopNav\n  },\n  data() {\n    return {\n      orders: [],\n      products: [],\n      product: {}\n    }\n  },\n  mounted() {\n    this.getProducts();\n  },\n  methods: {\n    async addProductsToList(newProduct) {\n      this.products.push(newProduct);\n    },\n    async updateProductInList(updatedProduct) {\n      const index = this.products.findIndex(product => product.id === updatedProduct.id);\n      this.products[index] = updatedProduct;\n    },\n    async getProduct(id) {\n      fetch(`${singleProductServiceUrl}${id}`)\n        .then(response => response.json())\n        .then(product => {\n          this.product.id = product.id\n          this.product.name = product.name\n          this.product.image = product.image\n          this.product.description = product.description\n          this.product.price = product.price\n        })\n        .catch(error => {\n          console.log(error)\n          alert('Error occurred while fetching product')\n        })\n    },\n    async getProducts() {\n      fetch(`${productServiceUrl}`)\n        .then(response => response.json())\n        .then(products => {\n          this.products = products\n        })\n        .catch(error => {\n          console.log(error)\n          alert('Error occurred while fetching products')\n        })\n    },\n    async fetchOrders() {\n      await fetch(`${makelineServiceUrl}order/fetch`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data)\n          if (data) {\n            this.orders = data;\n          } else {\n            console.log('No orders from server');\n          }\n        })\n        .catch(error => console.error(error));\n    },\n    async completeOrder(orderId) {      \n      // get the order and update the status\n      let order = this.orders.find(order => order.orderId === orderId);\n      order.status = 1;\n\n      let orderObject = JSON.stringify(order)\n      console.log(orderObject);\n\n      await fetch(`${makelineServiceUrl}order`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: orderObject\n      })\n        .then(response => {\n          if (!response.ok) {\n            alert('Error occurred while processing order')\n          } else {\n            alert('Order successfully processed')\n            // remove the order from the list\n            this.orders = this.orders.filter(order => order.orderId !== orderId);\n            this.$router.go(-1);\n          }\n        })\n        .catch(error => {\n          console.log(error)\n          alert('Error occurred while processing order')\n        })\n    }\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 120px;\n  padding: 1rem;\n}\n\nfooter {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #333;\n  color: #fff;\n  padding: 1rem;\n  margin: 0;\n}\n\nnav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nul {\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\nli {\n  margin: 0 1rem;\n}\n\na {\n  color: #fff;\n  text-decoration: none;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\nth,\ntd {\n  padding: 8px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.order-detail {\n  text-align: left;\n}\n\nbutton {\n  padding: 10px;\n  background-color: #005f8b;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  height: 42px;\n}\n\nbutton:hover {\n  background-color: #005f8b;\n}\n\n.action-button {\n  float: right;\n}\n\n.product-detail {\n  text-align: left;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 1rem;\n  margin: 2rem auto;\n}\n\n.product-form {\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  justify-content: center;\n  margin: 2rem auto;\n  width: 50%;\n}\n\n.form-row {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n}\n\n.ai-button {\n  margin-left: 10px;\n  padding: 10px 10px;\n  border-radius: 5px;\n  border: none;\n  background-color: #007acc;\n  color: #fff;\n  cursor: pointer;\n}\n\n.ai-button:hover {\n  background-color: #005f8b;\n}\n\ntextarea {\n  width: 100%;\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n}\n\nlabel {\n  text-align: right;\n  margin-right: 10px;\n  width: 100px;\n  font-weight: bold;\n}\n\ninput {\n  width: 100%;\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n}\n</style>\n"],"mappings":";;;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,YAAA,CAAUC,iBAAA,GACVD,YAAA,CASeE,sBAAA;IARZC,MAAM,EAAEC,KAAA,CAAAD,MAAM;IACdE,QAAQ,EAAED,KAAA,CAAAC,QAAQ;IAClBC,aAAW,EAAEC,QAAA,CAAAC,WAAW;IACxBC,eAAa,EAAEF,QAAA,CAAAG,aAAa;IAC5BC,mBAAiB,EAAEJ,QAAA,CAAAK,iBAAiB;IACpCC,qBAAmB,EAAEN,QAAA,CAAAO,mBAAmB;IACxCC,YAAU,EAAER,QAAA,CAAAS,UAAU;IACtBC,aAAW,EAAEV,QAAA,CAAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}