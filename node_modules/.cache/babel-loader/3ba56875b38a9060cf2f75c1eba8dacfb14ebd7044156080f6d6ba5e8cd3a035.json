{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport TopNav from './components/TopNav.vue';\nconst productServiceUrl = \"/products/\";\nconst singleProductServiceUrl = \"/product/\";\nconst makelineServiceUrl = \"/makeline/\";\nexport default {\n  name: 'App',\n  components: {\n    TopNav\n  },\n  data() {\n    return {\n      orders: [],\n      products: [],\n      product: {}\n    };\n  },\n  mounted() {\n    this.getProducts();\n  },\n  methods: {\n    async addProductsToList(newProduct) {\n      this.products.push(newProduct);\n    },\n    async updateProductInList(updatedProduct) {\n      const index = this.products.findIndex(product => product.id === updatedProduct.id);\n      this.products[index] = updatedProduct;\n    },\n    async getProduct(id) {\n      fetch(`${singleProductServiceUrl}${id}`).then(response => response.json()).then(product => {\n        this.product.id = product.id;\n        this.product.name = product.name;\n        this.product.image = product.image;\n        this.product.description = product.description;\n        this.product.price = product.price;\n      }).catch(error => {\n        console.log(error);\n        alert('Error occurred while fetching product');\n      });\n    },\n    async getProducts() {\n      fetch(`${productServiceUrl}`).then(response => response.json()).then(products => {\n        this.products = products;\n      }).catch(error => {\n        console.log(error);\n        alert('Error occurred while fetching products');\n      });\n    },\n    async fetchOrders() {\n      await fetch(`${makelineServiceUrl}order/fetch`).then(response => response.json()).then(data => {\n        console.log(data);\n        if (data) {\n          this.orders = data;\n        } else {\n          console.log('No orders from server');\n        }\n      }).catch(error => console.error(error));\n    },\n    async completeOrder(orderId) {\n      // get the order and update the status\n      let order = this.orders.find(order => order.orderId === orderId);\n      order.status = 1;\n      let orderObject = JSON.stringify(order);\n      console.log(orderObject);\n      await fetch(`${makelineServiceUrl}order`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: orderObject\n      }).then(response => {\n        if (!response.ok) {\n          alert('Error occurred while processing order');\n        } else {\n          alert('Order successfully processed');\n          // remove the order from the list\n          this.orders = this.orders.filter(order => order.orderId !== orderId);\n          this.$router.go(-1);\n        }\n      }).catch(error => {\n        console.log(error);\n        alert('Error occurred while processing order');\n      });\n    }\n  }\n};","map":{"version":3,"names":["TopNav","productServiceUrl","singleProductServiceUrl","makelineServiceUrl","name","components","data","orders","products","product","mounted","getProducts","methods","addProductsToList","newProduct","push","updateProductInList","updatedProduct","index","findIndex","id","getProduct","fetch","then","response","json","image","description","price","catch","error","console","log","alert","fetchOrders","completeOrder","orderId","order","find","status","orderObject","JSON","stringify","method","headers","body","ok","filter","$router","go"],"sources":["/Users/fattehali/Desktop/BestBuy/store-admin-L8/src/App.vue"],"sourcesContent":["<template>\n  <TopNav />\n  <router-view\n    :orders=\"orders\"\n    :products=\"products\"\n    @fetchOrders=\"fetchOrders\"\n    @completeOrder=\"completeOrder\"\n    @addProductsToList=\"addProductsToList\"\n    @updateProductInList=\"updateProductInList\"\n    @getProduct=\"getProduct\"\n    @getProducts=\"getProducts\"\n  ></router-view>\n</template>\n\n<script>\nimport TopNav from './components/TopNav.vue';\n\nconst productServiceUrl = \"/products/\";\nconst singleProductServiceUrl = \"/product/\";\nconst makelineServiceUrl = \"/makeline/\";\n\nexport default {\n  name: 'App',\n  components: {\n    TopNav\n  },\n  data() {\n    return {\n      orders: [],\n      products: [],\n      product: {}\n    }\n  },\n  mounted() {\n    this.getProducts();\n  },\n  methods: {\n    async addProductsToList(newProduct) {\n      this.products.push(newProduct);\n    },\n    async updateProductInList(updatedProduct) {\n      const index = this.products.findIndex(product => product.id === updatedProduct.id);\n      this.products[index] = updatedProduct;\n    },\n    async getProduct(id) {\n      fetch(`${singleProductServiceUrl}${id}`)\n        .then(response => response.json())\n        .then(product => {\n          this.product.id = product.id\n          this.product.name = product.name\n          this.product.image = product.image\n          this.product.description = product.description\n          this.product.price = product.price\n        })\n        .catch(error => {\n          console.log(error)\n          alert('Error occurred while fetching product')\n        })\n    },\n    async getProducts() {\n      fetch(`${productServiceUrl}`)\n        .then(response => response.json())\n        .then(products => {\n          this.products = products\n        })\n        .catch(error => {\n          console.log(error)\n          alert('Error occurred while fetching products')\n        })\n    },\n    async fetchOrders() {\n      await fetch(`${makelineServiceUrl}order/fetch`)\n        .then(response => response.json())\n        .then(data => {\n          console.log(data)\n          if (data) {\n            this.orders = data;\n          } else {\n            console.log('No orders from server');\n          }\n        })\n        .catch(error => console.error(error));\n    },\n    async completeOrder(orderId) {      \n      // get the order and update the status\n      let order = this.orders.find(order => order.orderId === orderId);\n      order.status = 1;\n\n      let orderObject = JSON.stringify(order)\n      console.log(orderObject);\n\n      await fetch(`${makelineServiceUrl}order`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: orderObject\n      })\n        .then(response => {\n          if (!response.ok) {\n            alert('Error occurred while processing order')\n          } else {\n            alert('Order successfully processed')\n            // remove the order from the list\n            this.orders = this.orders.filter(order => order.orderId !== orderId);\n            this.$router.go(-1);\n          }\n        })\n        .catch(error => {\n          console.log(error)\n          alert('Error occurred while processing order')\n        })\n    }\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 120px;\n  padding: 1rem;\n}\n\nfooter {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  background-color: #333;\n  color: #fff;\n  padding: 1rem;\n  margin: 0;\n}\n\nnav {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\nul {\n  display: flex;\n  list-style: none;\n  margin: 0;\n  padding: 0;\n}\n\nli {\n  margin: 0 1rem;\n}\n\na {\n  color: #fff;\n  text-decoration: none;\n}\n\ntable {\n  width: 100%;\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\nth,\ntd {\n  padding: 8px;\n  text-align: left;\n  border-bottom: 1px solid #ddd;\n}\n\n.order-detail {\n  text-align: left;\n}\n\nbutton {\n  padding: 10px;\n  background-color: #005f8b;\n  color: #fff;\n  border: none;\n  border-radius: 5px;\n  cursor: pointer;\n  height: 42px;\n}\n\nbutton:hover {\n  background-color: #005f8b;\n}\n\n.action-button {\n  float: right;\n}\n\n.product-detail {\n  text-align: left;\n  display: flex;\n  align-items: flex-start;\n  justify-content: center;\n  gap: 1rem;\n  margin: 2rem auto;\n}\n\n.product-form {\n  display: flex;\n  flex-direction: column;\n  align-items: left;\n  justify-content: center;\n  margin: 2rem auto;\n  width: 50%;\n}\n\n.form-row {\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: 10px;\n}\n\n.ai-button {\n  margin-left: 10px;\n  padding: 10px 10px;\n  border-radius: 5px;\n  border: none;\n  background-color: #007acc;\n  color: #fff;\n  cursor: pointer;\n}\n\n.ai-button:hover {\n  background-color: #005f8b;\n}\n\ntextarea {\n  width: 100%;\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n}\n\nlabel {\n  text-align: right;\n  margin-right: 10px;\n  width: 100px;\n  font-weight: bold;\n}\n\ninput {\n  width: 100%;\n  padding: 5px;\n  border-radius: 5px;\n  border: 1px solid #ccc;\n}\n</style>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}