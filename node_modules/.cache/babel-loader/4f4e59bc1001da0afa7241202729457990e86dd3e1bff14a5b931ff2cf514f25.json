{"ast":null,"code":"export default {\n  name: 'OrderDetail',\n  props: ['orders', 'products'],\n  emits: ['completeOrder'],\n  data() {\n    return {\n      order: null\n    };\n  },\n  computed: {\n    orderExists() {\n      return !!this.order;\n    }\n  },\n  mounted() {\n    this.getOrder();\n  },\n  methods: {\n    getOrder() {\n      // get the order from the orders prop\n      // if not found in the orders prop, fetch from the server\n      this.order = this.orders.find(order => order.orderId === this.$route.params.id);\n      if (!this.order) {\n        // get the order from the makeline service\n        fetch(`/makeline/order/${this.$route.params.id}`).then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          // check if the response is empty\n          if (response.status === 204) {\n            return null;\n          }\n          return response.json();\n        }).then(data => {\n          if (data) {\n            this.order = data;\n          } else {\n            console.log('No orders from server');\n          }\n        }).catch(error => console.error(error));\n      }\n      return this.order;\n    },\n    completeOrder() {\n      this.$emit('completeOrder', this.order.orderId);\n    },\n    productLookup(id) {\n      return this.products.find(product => product.id === id).name;\n    },\n    orderTotal() {\n      let total = 0;\n      this.order.items.forEach(item => {\n        total += item.price * item.quantity;\n      });\n      return total.toFixed(2);\n    }\n  }\n};","map":{"version":3,"names":["name","props","emits","data","order","computed","orderExists","mounted","getOrder","methods","orders","find","orderId","$route","params","id","fetch","then","response","ok","Error","status","json","console","log","catch","error","completeOrder","$emit","productLookup","products","product","orderTotal","total","items","forEach","item","price","quantity","toFixed"],"sources":["/Users/fattehali/Desktop/BestBuy/store-admin-L8/src/components/OrderDetail.vue"],"sourcesContent":["<template>\n  <div class=\"order-detail\" v-if=\"orderExists\">\n    <div class=\"action-button\">\n      <button @click=\"completeOrder\" class=\"button\">Complete Order</button>\n    </div>\n    <br/>\n    <div class=\"order-header\">\n      <p><b>Order ID:</b> {{ order.orderId }}</p>\n      <p><b>Customer ID:</b> {{ order.customerId }}</p>\n      <p><b>Status:</b> {{ order.status }}</p>\n    </div>\n    <div class=\"order-items\">\n      <table>\n        <thead>\n          <tr>\n            <th>Product ID</th>\n            <th>Product Name</th>\n            <th>Quantity</th>\n            <th>Price</th>\n            <th>Total</th>\n          </tr>\n        </thead>\n        <tr v-for=\"item in order.items\" :key=\"item.productId\">\n          <td><router-link :to=\"`/product/${item.productId}`\">{{ item.productId }}</router-link></td>\n          <td>{{ productLookup(item.productId) }}</td>\n          <td>{{ item.quantity }}</td>\n          <td>{{ item.price.toFixed(2) }}</td>\n          <td>{{ (item.quantity * item.price).toFixed(2) }}</td>\n        </tr>\n        <tfoot>\n          <tr>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td></td>\n            <td><b>{{ orderTotal() }}</b></td>\n          </tr>\n        </tfoot>\n      </table>\n    </div>\n  </div>\n  <div class=\"order-detail\" v-else>\n    <h3>Opps! That order was not found...</h3>\n  </div>\n</template>\n\n<script>\n  export default {\n    name: 'OrderDetail',\n    props: ['orders','products'],\n    emits: ['completeOrder'],\n    data() {\n      return {\n        order: null\n      }\n    },\n    computed: {\n      orderExists() {\n        return !!this.order\n      }\n    },\n    mounted() {\n      this.getOrder()\n    },\n    methods: {\n      getOrder() {\n        // get the order from the orders prop\n        // if not found in the orders prop, fetch from the server\n        this.order = this.orders.find(order => order.orderId === this.$route.params.id);  \n        \n        if (!this.order) {          \n          // get the order from the makeline service\n          fetch(`/makeline/order/${this.$route.params.id}`)\n            .then(response => {\n              if (!response.ok) {\n                throw new Error('Network response was not ok');\n              }\n              // check if the response is empty\n              if (response.status === 204) {\n                return null;\n              }\n              return response.json();\n            })\n            .then(data => {\n              if (data) {\n                this.order = data;\n              } else {\n                console.log('No orders from server');\n              }\n            })\n            .catch(error => console.error(error));\n        }\n        \n        return this.order;\n      },\n      completeOrder() {\n        this.$emit('completeOrder', this.order.orderId)\n      },\n      productLookup(id) {\n        return this.products.find(product => product.id === id).name;\n      },\n      orderTotal() {\n        let total = 0;\n        this.order.items.forEach(item => {\n          total += item.price * item.quantity;\n        });\n        return total.toFixed(2);\n      }\n    }\n  }\n</script>\n\n<style scoped>\na {\n  color: #0000FF;\n  text-decoration: underline;\n}\n\n.order-detail {\n  text-align: left;\n}\n</style>"],"mappings":"AA+CE,eAAe;EACbA,IAAI,EAAE,aAAa;EACnBC,KAAK,EAAE,CAAC,QAAQ,EAAC,UAAU,CAAC;EAC5BC,KAAK,EAAE,CAAC,eAAe,CAAC;EACxBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE;IACT;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,WAAWA,CAAA,EAAG;MACZ,OAAO,CAAC,CAAC,IAAI,CAACF,KAAI;IACpB;EACF,CAAC;EACDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACC,QAAQ,CAAC;EAChB,CAAC;EACDC,OAAO,EAAE;IACPD,QAAQA,CAAA,EAAG;MACT;MACA;MACA,IAAI,CAACJ,KAAI,GAAI,IAAI,CAACM,MAAM,CAACC,IAAI,CAACP,KAAI,IAAKA,KAAK,CAACQ,OAAM,KAAM,IAAI,CAACC,MAAM,CAACC,MAAM,CAACC,EAAE,CAAC;MAE/E,IAAI,CAAC,IAAI,CAACX,KAAK,EAAE;QACf;QACAY,KAAK,CAAC,mBAAmB,IAAI,CAACH,MAAM,CAACC,MAAM,CAACC,EAAE,EAAE,EAC7CE,IAAI,CAACC,QAAO,IAAK;UAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;YAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;UAChD;UACA;UACA,IAAIF,QAAQ,CAACG,MAAK,KAAM,GAAG,EAAE;YAC3B,OAAO,IAAI;UACb;UACA,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;QACxB,CAAC,EACAL,IAAI,CAACd,IAAG,IAAK;UACZ,IAAIA,IAAI,EAAE;YACR,IAAI,CAACC,KAAI,GAAID,IAAI;UACnB,OAAO;YACLoB,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;UACtC;QACF,CAAC,EACAC,KAAK,CAACC,KAAI,IAAKH,OAAO,CAACG,KAAK,CAACA,KAAK,CAAC,CAAC;MACzC;MAEA,OAAO,IAAI,CAACtB,KAAK;IACnB,CAAC;IACDuB,aAAaA,CAAA,EAAG;MACd,IAAI,CAACC,KAAK,CAAC,eAAe,EAAE,IAAI,CAACxB,KAAK,CAACQ,OAAO;IAChD,CAAC;IACDiB,aAAaA,CAACd,EAAE,EAAE;MAChB,OAAO,IAAI,CAACe,QAAQ,CAACnB,IAAI,CAACoB,OAAM,IAAKA,OAAO,CAAChB,EAAC,KAAMA,EAAE,CAAC,CAACf,IAAI;IAC9D,CAAC;IACDgC,UAAUA,CAAA,EAAG;MACX,IAAIC,KAAI,GAAI,CAAC;MACb,IAAI,CAAC7B,KAAK,CAAC8B,KAAK,CAACC,OAAO,CAACC,IAAG,IAAK;QAC/BH,KAAI,IAAKG,IAAI,CAACC,KAAI,GAAID,IAAI,CAACE,QAAQ;MACrC,CAAC,CAAC;MACF,OAAOL,KAAK,CAACM,OAAO,CAAC,CAAC,CAAC;IACzB;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}